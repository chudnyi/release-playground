name: release-please
on:
  workflow_dispatch:
permissions:
  contents: write
  pull-requests: write
jobs:
  release_please:
    name: "Release Please"
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: simple

  build:
    name: "Build release binaries"
    needs: ["release_please"]
    if: ${{ needs.release_please.outputs.release_created == 'true' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
#          - target: x86_64-unknown-linux-gnu
#            os: ubuntu-latest
#            name: play-x86_64-unknown-linux-gnu.zip
#          - target: aarch64-unknown-linux-gnu
#            os: ubuntu-latest
#            name: play-aarch64-unknown-linux-gnu.zip
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: [self-hosted, linux, ARM64, home]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pkgxdev/setup@v1
        with:
          version: "1.1.6"

      - run: ./scripts/build.sh ${{ matrix.target }}

      - uses: pkgxdev/brewkit/actions/setup-codesign@v0
#        if: startsWith(matrix.os, 'macOS')
        with:
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATE_P12 }}
          p12-password: ${{ secrets.APPLE_CERTIFICATE_P12_PASSWORD }}

      # codesign always fails for deno binaries, even though it
      # signs fine. See https://github.com/denoland/deno/issues/575
      - run: codesign
          --sign "$APPLE_IDENTITY" --force
          --preserve-metadata=entitlements,requirements,flags,runtime ./dist/play-${{ matrix.target }} || true
        env:
          APPLE_IDENTITY: ${{ secrets.APPLE_IDENTITY }}

      - name: Upload Release Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          gh release upload --clobber ${{ needs.release_please.outputs.tag_name }} ./dist/*
